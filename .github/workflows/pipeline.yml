name: CI/CD
on:
  push:
    branches: ['main']
env:
  REGISTRY: ghcr.io
  REPOSITORY: ${{ github.repository }}
  IMAGE_NAME: romazinkevich/food-delivery-backend
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Fetch Code
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.DEPLOY_KEY_PRIVATE }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.REMOTE_SERVER }} >> ~/.ssh/known_hosts

      - name: Install rsync
        run: sudo apt --assume-yes --no-install-recommends install rsync

      - name: Create and sync stack configuration
        run: |
          mkdir -p dev_stack
          cp backend/docker-compose.yml dev_stack/docker-compose.yml
          echo "BACKEND_IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}" >> dev_stack/.env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> dev_stack/.env
          echo "DB_USER=${{ secrets.DB_USER }}" >> dev_stack/.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> dev_stack/.env
          rsync -r dev_stack "${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_SERVER }}:./"

      - name: Start containers via SSH
        run:
          ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_SERVER }}
          "
          docker login ${{ env.REGISTRY }} -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }};
          cd dev_stack;
          docker-compose pull;
          docker-compose up -d;
          "